{"version":3,"sources":["components/homePage.tsx","components/tabs.tsx","notFoundPage.tsx","App.tsx","index.tsx"],"names":["ComponentTitle","className","Tabs","tabs","selectedTabId","setTabId","selecetedContent","find","tab","id","newContent","content","map","to","onClick","title","NotFoundPage","App","useState","setSelectedTabId","handleSelectedTab","tabId","isActive","cn","replace","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"kQAEaA,EAA2B,WACtC,OACE,mCACE,oBAAIC,UAAU,QAAd,0BCKOC,EAAuB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEMC,EAAmBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE/CM,EAAU,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAkBK,QAErC,OACE,sBAAKV,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGE,EAAKS,KAAI,SAACJ,GACT,OACE,oBACE,UAAQ,MAERP,UAAWG,IAAkBI,EAAIC,GAAK,YAAc,GAHtD,SAKE,cAAC,IAAD,CACEI,GAAE,gBAAWL,EAAIC,IACjBK,QAAS,kBAAMT,EAASG,EAAIC,KAF9B,SAIGD,EAAIO,SAPFP,EAAIC,WAenB,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,SACGS,GAAc,4BC5CVM,EAAe,WAC1B,OACE,mCACE,oBAAIf,UAAU,QAAd,+BCOAE,EAAO,CACX,CAAEM,GAAI,QAASM,MAAO,QAASJ,QAAS,eACxC,CAAEF,GAAI,QAASM,MAAO,QAASJ,QAAS,eACxC,CAAEF,GAAI,QAASM,MAAO,QAASJ,QAAS,gBAG7BM,EAAM,WACjB,MAA0CC,mBAAS,IAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KAEMC,EAAoB,SAACC,GACzBF,EAAiBE,IAOnB,OACE,qCAEE,qBACEpB,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGqB,EAAH,EAAGA,SAAH,OACTC,IACE,cACA,CACE,YAAaD,KAInBE,SAAO,EACPX,GAAG,IACHC,QAxBY,WACtBK,EAAiB,KAYT,kBAeA,cAAC,IAAD,CACElB,UAAW,gBAAGqB,EAAH,EAAGA,SAAH,OACTC,IACE,cACA,CACE,YAAaD,KAInBT,GAAG,QATL,yBAkBN,qBAAKZ,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEwB,KAAK,IACLC,QAAS,cAAC,EAAD,MAGX,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CACEE,OAAK,EACLD,QACE,cAAC,EAAD,CACEvB,KAAMA,EACNE,SAAUe,EACVhB,cAAeA,MAIrB,cAAC,IAAD,CACEqB,KAAI,WAAMrB,GACVsB,QACE,cAAC,EAAD,CACEvB,KAAMA,EACNE,SAAUe,EACVhB,cAAeA,SAKvB,cAAC,IAAD,CAAOqB,KAAK,KAAKC,QAAS,cAAC,EAAD,eC9FpCE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c7487b84.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ComponentTitle: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Home page</h1>\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  setTabId: (newValue: string) => void,\n}\n\nexport const Tabs:React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  setTabId,\n}) => {\n  const selecetedContent = tabs.find(tab => tab.id === selectedTabId);\n\n  const newContent = selecetedContent?.content;\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={tab.id}\n                className={selectedTabId === tab.id ? 'is-active' : ''}\n              >\n                <NavLink\n                  to={`/tabs/${tab.id}`}\n                  onClick={() => setTabId(tab.id)}\n                >\n                  {tab.title}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {newContent || 'Please select a tab'}\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <>\n      <h1 className=\"title\">Page not found</h1>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Route, Routes, NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { ComponentTitle } from './components/homePage';\nimport { Tabs } from './components/tabs';\nimport { NotFoundPage } from './notFoundPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState('');\n\n  const handleSelectedTab = (tabId: string) => {\n    setSelectedTabId(tabId);\n  };\n\n  const handleHomeClick = () => {\n    setSelectedTabId('');\n  };\n\n  return (\n    <>\n      {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'is-active': isActive,\n                  },\n                )\n              )}\n              replace\n              to=\"/\"\n              onClick={handleHomeClick}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'is-active': isActive,\n                  },\n                )\n              )}\n              to=\"/tabs\"\n            >\n              Tabs\n            </NavLink>\n\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<ComponentTitle />}\n          />\n\n          <Route path=\"tabs\">\n            <Route\n              index\n              element={(\n                <Tabs\n                  tabs={tabs}\n                  setTabId={handleSelectedTab}\n                  selectedTabId={selectedTabId}\n                />\n              )}\n            />\n            <Route\n              path={`:${selectedTabId}`}\n              element={(\n                <Tabs\n                  tabs={tabs}\n                  setTabId={handleSelectedTab}\n                  selectedTabId={selectedTabId}\n                />\n              )}\n            />\n          </Route>\n          <Route path=\"/*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}